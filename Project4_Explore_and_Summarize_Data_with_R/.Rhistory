volatile_acidity <- bi_plot %+% aes(y = volatile.acidity) +
ggtitle("Quality vs Volatile Acidity")
alcohol <- bi_plot %+% aes(y = alcohol) +
ggtitle("Quality vs Alcohol")
citric_acid <- bi_plot %+% aes(y = citric.acid) +
ggtitle("Quality vs Citric Acid")
density <- bi_plot %+% aes(y = density) +
ggtitle("Quality vs Density")
ph <- bi_plot %+% aes(y = pH) +
ggtitle("Quality vs pH")
sulphates <- bi_plot %+% aes(y = sulphates) +
ggtitle("Quality vs Sulphates")
grid.arrange(volatile_acidity, alcohol, density, sulphates, ph,
citric_acid, ncol = 2)
# Chunk 10
p <- ggplot(aes(x = alcohol,
y = sulphates  , color = factor(quality)),
data = wines) +
geom_point(alpha = 0.8, size = 2) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
scale_color_brewer(type='seq',
guide=guide_legend(title='Quality'))
p %+% aes(y=alcohol, x=fixed.acidity, colour = factor(quality)) +
ggtitle("Alcohol vs Fixed Acidity colored by Quality")
p %+% aes(y=alcohol, x=volatile.acidity, colour = factor(quality)) +
ggtitle("Alcohol vs Volatile Acidity colored by Quality")
p %+% aes(y=alcohol, x=chlorides, colour = factor(quality)) +
ggtitle("Alcohol vs chlorides colored by Quality")
p %+% aes(y=sulphates, x=volatile.acidity, colour = factor(quality)) +
ggtitle("Sulphates vs Volatile Acidity colored by Quality")
ggplot(aes(factor(quality),
alcohol),
data = red.wines) +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4)+
geom_smooth(aes(quality-2,
alcohol),
method = "lm",
se = FALSE,size=2)
ggplot(aes(factor(quality),
alcohol),
data = wines) +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4)+
geom_smooth(aes(quality-2,
alcohol),
method = "lm",
se = FALSE,size=2)
ggplot(aes(factor(quality),
alcohol),
data = wines) +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4)
ggplot(aes(factor(quality),
alcohol),
data = wines) +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4)
ggplot(aes(factor(quality),
alcohol),
data = wines) +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4)
p <- ggplot(aes(factor(quality),
alcohol),
data = wines) +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4)
p
p %+% aes(y = volatile.acidity) +
ggtitle("Quality vs Volatile Acidity")
p <- ggplot(aes(factor(quality),
alcohol),
data = wines) +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4)
varlist <- names(wines[2:12])
lapply(varlist, function(n){
p %+% aes(y = volatile.acidity) +
ggtitle("Quality vs Volatile Acidity")
})
varlist <- names(wines[2:12])
lapply(varlist, function(n){
p %+% aes(y = n) +
ggtitle("Quality vs Volatile Acidity")
})
varlist <- names(wines[2:12])
for (i in varlist){
p %+% aes(y = i) +
ggtitle("Quality vs Volatile Acidity")
})
varlist <- names(wines[2:12])
for (i in varlist){
p %+% aes(y = i) +
ggtitle("Quality vs Volatile Acidity")
}
p <- ggplot(aes(factor(quality),
alcohol),
data = wines) +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4)
varlist <- names(wines[2:12])
for (i in varlist){
p %+% aes(y = i) +
ggtitle("Quality vs Volatile Acidity")
}
for (i in 2:12){
p %+% aes(y = wines[i]) +
ggtitle("Quality vs Volatile Acidity")
}
# Chunk 1
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(gridExtra)
# Chunk 2
# Load the Data
wines <- read.csv("wineQualityReds.csv")
# Chunk 3
for (i in 2:12){
d = density(wines[,i])
p1 = qplot(d$x, d$y/sum(d$y), geom = "line") +
xlab(names(wines)[i]) +
ylab("Probability Density")
ggtitle(paste("Distribution of",names(wines)[i]))
p2 = ggplot(wines, aes( x = 1, y = wines[i] ) ) +
geom_jitter(alpha = 0.1 ) +
geom_boxplot(alpha = 0.2, color = 'red' )
grid.arrange(p1, p2, ncol=2)
print(summary(wines[,i]))
}
summary(wines$quality)
table(wines$quality)
# Chunk 4
abs(round(cor(wines),3))[-12,"quality"]
# Chunk 5
wines$quality = as.factor(wines$quality)
summary(wines$quality)
table(wines$quality)
# Chunk 6
p <- ggplot(aes(factor(quality),
alcohol),
data = wines) +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4)
varlist <- names(wines[2:12])
for (i in varlist){
p %+% aes(y = i) +
ggtitle("Quality vs Volatile Acidity")
}
abs(round(cor(wines[,-c(12,13)]),3))
# Chunk 7
multi_varients <- combn(names(wines)[-c(12,13)],2)
for (i in 1:ncol(multi_varients)){
p <- ggplot(aes(y=wines[,multi_varients[2,i]],
x=wines[,multi_varients[1,i]],
colour = factor(quality)), data = wines) +
geom_point(alpha = 0.8, size = 2) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
scale_color_brewer(type='seq',
guide=guide_legend(title='Quality'))
plot(p)
}
# Chunk 8
ggplot(aes(x = quality), data = wines)  +
geom_bar() +
ggtitle("Number of Wines by Quality")
# Chunk 9
bi_plot <- ggplot(aes(factor(quality),
volatile.acidity),
data = wines) +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4)
volatile_acidity <- bi_plot %+% aes(y = volatile.acidity) +
ggtitle("Quality vs Volatile Acidity")
alcohol <- bi_plot %+% aes(y = alcohol) +
ggtitle("Quality vs Alcohol")
citric_acid <- bi_plot %+% aes(y = citric.acid) +
ggtitle("Quality vs Citric Acid")
density <- bi_plot %+% aes(y = density) +
ggtitle("Quality vs Density")
ph <- bi_plot %+% aes(y = pH) +
ggtitle("Quality vs pH")
sulphates <- bi_plot %+% aes(y = sulphates) +
ggtitle("Quality vs Sulphates")
grid.arrange(volatile_acidity, alcohol, density, sulphates, ph,
citric_acid, ncol = 2)
# Chunk 10
p <- ggplot(aes(x = alcohol,
y = sulphates  , color = factor(quality)),
data = wines) +
geom_point(alpha = 0.8, size = 2) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
scale_color_brewer(type='seq',
guide=guide_legend(title='Quality'))
p %+% aes(y=alcohol, x=fixed.acidity, colour = factor(quality)) +
ggtitle("Alcohol vs Fixed Acidity colored by Quality")
p %+% aes(y=alcohol, x=volatile.acidity, colour = factor(quality)) +
ggtitle("Alcohol vs Volatile Acidity colored by Quality")
p %+% aes(y=alcohol, x=chlorides, colour = factor(quality)) +
ggtitle("Alcohol vs chlorides colored by Quality")
p %+% aes(y=sulphates, x=volatile.acidity, colour = factor(quality)) +
ggtitle("Sulphates vs Volatile Acidity colored by Quality")
p <- ggplot(aes(factor(quality),
alcohol),
data = wines) +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4)
for (i in 2:12){
p %+% aes(y = wines[i]) +
ggtitle("Quality vs Volatile Acidity")
}
abs(round(cor(wines[,-c(12,13)]),3))
for (i in 2:12){
p <-p %+% aes(y = wines[i]) +
ggtitle("Quality vs Volatile Acidity")
plot(p)
}
for (i in varlist){
p <-p %+% aes(y = i) +
ggtitle("Quality vs Volatile Acidity")
plot(p)
}
for (i in 2:12){
p <-p %+% aes(y = wines[i]) +
ggtitle("Quality vs Volatile Acidity")
plot(p)
}
for (i in 2:12){
p <-p %+% aes(y = wines[i]) +
ylab(names(wines[i])) +
ggtitle(names(wines[i]), "By Quality")
plot(p)
}
for (i in 2:12){
p <-p %+% aes(y = wines[i]) +
ylab(names(wines[i])) +
ggtitle(paste(names(wines[i]), "By Quality"))
plot(p)
}
p <- ggplot(aes(factor(quality),
alcohol),
data = wines) +
xlab("Quality") +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4)
for (i in 2:12){
p <-p %+% aes(y = wines[i]) +
ylab(names(wines[i])) +
ggtitle(paste(names(wines[i]), "by quality"))
plot(p)
}
for (i in 2:12){
d = density(wines[,i])
p1 = qplot(d$x, d$y/sum(d$y), geom = "line") +
xlab(names(wines)[i]) +
ylab("Probability Density") +
ggtitle(paste("Distribution of",names(wines)[i]))
p2 = ggplot(wines, aes( x = 1, y = wines[i] ) ) +
ylab(names(wines[i]))
geom_jitter(alpha = 0.1 ) +
geom_boxplot(alpha = 0.2, color = 'red' )
grid.arrange(p1, p2, ncol=2)
print(summary(wines[,i]))
}
for (i in 2:12){
d = density(wines[,i])
p1 = qplot(d$x, d$y/sum(d$y), geom = "line") +
xlab(names(wines)[i]) +
ylab("Probability Density") +
ggtitle(paste("Distribution of",names(wines)[i]))
p2 = ggplot(wines, aes( x = 1, y = wines[i] ) ) +
ylab(names(wines[i])) +
geom_jitter(alpha = 0.1 ) +
geom_boxplot(alpha = 0.2, color = 'red' )
grid.arrange(p1, p2, ncol=2)
print(summary(wines[,i]))
}
for (i in 2:12){
d = density(wines[,i])
p1 = qplot(d$x, d$y/sum(d$y), geom = "line") +
xlab(names(wines)[i]) +
ylab("Probability Density") +
ggtitle(paste("Distribution of",names(wines)[i]))
p2 = ggplot(wines, aes( x = 1, y = wines[i] ) ) +
ylab(names(wines[i])) +
geom_jitter(alpha = 0.1 ) +
geom_boxplot(alpha = 0.2, color = 'red' ) +
ggtitle(paste("Boxplot of outliers for",names(wines)[i]))
grid.arrange(p1, p2, ncol=2)
print(paste("Summary of", names(wines[i])))
print(summary(wines[,i]))
}
multi_varients <- combn(names(wines)[-c(12,13)],2)
for (i in 1:ncol(multi_varients)){
p <- ggplot(aes(y=wines[,multi_varients[2,i]],
x=wines[,multi_varients[1,i]],
colour = factor(quality)), data = wines) +
xlab(names(wines[,multi_varients[1,i]])) +
ylab(names(wines[,multi_varients[2,i]])) +
geom_point(alpha = 0.8, size = 2) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
scale_color_brewer(type='seq',
guide=guide_legend(title='Quality'))
plot(p)
}
multi_varients <- combn(names(wines)[-c(12,13)],2)
for (i in 1:ncol(multi_varients)){
p <- ggplot(aes(y=wines[,multi_varients[2,i]],
x=wines[,multi_varients[1,i]],
colour = factor(quality)), data = wines) +
xlab(names(wines[,multi_varients[1,i]])) +
ylab(names(wines[,multi_varients[2,i]])) +
geom_point(alpha = 0.8, size = 2) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
scale_color_brewer(type='seq',
guide=guide_legend(title='Quality')) +
ggtitle(paste(names(wines[,multi_varients[1,i]]), "by",
names(wines[,multi_varients[2,i]])))
plot(p)
}
for (i in 1:ncol(multi_varients)){
p <- ggplot(aes(y=wines[,multi_varients[2,i]],
x=wines[,multi_varients[1,i]],
colour = factor(quality)), data = wines) +
xlab(multi_varients[1,i]) +
ylab(multi_varients[2,i]) +
geom_point(alpha = 0.8, size = 2) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
scale_color_brewer(type='seq',
guide=guide_legend(title='Quality')) +
ggtitle(paste(multi_varients[1,i], "by",
multi_varients[2,i]))
plot(p)
}
# Chunk 1
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(gridExtra)
# Chunk 2
# Load the Data
wines <- read.csv("wineQualityReds.csv")
# Chunk 3
for (i in 2:12){
d = density(wines[,i])
p1 = qplot(d$x, d$y/sum(d$y), geom = "line") +
xlab(names(wines)[i]) +
ylab("Probability Density") +
ggtitle(paste("Distribution of",names(wines)[i]))
p2 = ggplot(wines, aes( x = 1, y = wines[i] ) ) +
ylab(names(wines[i])) +
geom_jitter(alpha = 0.1 ) +
geom_boxplot(alpha = 0.2, color = 'red' ) +
ggtitle(paste("Boxplot of outliers for",names(wines)[i]))
grid.arrange(p1, p2, ncol=2)
print(paste("Summary of", names(wines[i])))
print(summary(wines[,i]))
}
print("Summary of Quality")
summary(wines$quality)
table(wines$quality)
# Chunk 4
abs(round(cor(wines),3))[-12,"quality"]
# Chunk 5
wines$quality = as.factor(wines$quality)
# Chunk 6
p <- ggplot(aes(factor(quality),
alcohol),
data = wines) +
xlab("quality") +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4)
for (i in 2:12){
p <-p %+% aes(y = wines[i]) +
ylab(names(wines[i])) +
ggtitle(paste(names(wines[i]), "by quality"))
plot(p)
}
abs(round(cor(wines[,-c(12,13)]),3))
# Chunk 7
multi_varients <- combn(names(wines)[-c(12,13)],2)
for (i in 1:ncol(multi_varients)){
p <- ggplot(aes(y=wines[,multi_varients[2,i]],
x=wines[,multi_varients[1,i]],
colour = factor(quality)), data = wines) +
xlab(multi_varients[1,i]) +
ylab(multi_varients[2,i]) +
geom_point(alpha = 0.8, size = 2) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
scale_color_brewer(type='seq',
guide=guide_legend(title='Quality')) +
ggtitle(paste(multi_varients[1,i], "by",
multi_varients[2,i], "colored by quality"))
plot(p)
}
# Chunk 8
ggplot(aes(x = quality), data = wines)  +
geom_bar() +
ggtitle("Number of Wines by Quality")
# Chunk 9
bi_plot <- ggplot(aes(factor(quality),
volatile.acidity),
data = wines) +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4)
volatile_acidity <- bi_plot %+% aes(y = volatile.acidity) +
ggtitle("Quality vs Volatile Acidity")
alcohol <- bi_plot %+% aes(y = alcohol) +
ggtitle("Quality vs Alcohol")
citric_acid <- bi_plot %+% aes(y = citric.acid) +
ggtitle("Quality vs Citric Acid")
density <- bi_plot %+% aes(y = density) +
ggtitle("Quality vs Density")
ph <- bi_plot %+% aes(y = pH) +
ggtitle("Quality vs pH")
sulphates <- bi_plot %+% aes(y = sulphates) +
ggtitle("Quality vs Sulphates")
grid.arrange(volatile_acidity, alcohol, density, sulphates, ph,
citric_acid, ncol = 2)
# Chunk 10
p <- ggplot(aes(x = alcohol,
y = sulphates  , color = factor(quality)),
data = wines) +
geom_point(alpha = 0.8, size = 2) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
scale_color_brewer(type='seq',
guide=guide_legend(title='Quality'))
p %+% aes(y=alcohol, x=fixed.acidity, colour = factor(quality)) +
ggtitle("Alcohol vs Fixed Acidity colored by Quality")
p %+% aes(y=alcohol, x=volatile.acidity, colour = factor(quality)) +
ggtitle("Alcohol vs Volatile Acidity colored by Quality")
p %+% aes(y=alcohol, x=chlorides, colour = factor(quality)) +
ggtitle("Alcohol vs chlorides colored by Quality")
p %+% aes(y=sulphates, x=volatile.acidity, colour = factor(quality)) +
ggtitle("Sulphates vs Volatile Acidity colored by Quality")
